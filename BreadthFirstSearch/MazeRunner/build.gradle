plugins {
    id 'ata-curriculum.snippets-conventions'
}

checkstyle {
    def suppressionFile = rootProject.file('Utilities/ATACheckstyle/configuration/checkstyle/unit1/suppressions.xml')
    configProperties.put('checkstyle.suppression.filter', suppressionFile)
}

def wflowToTestsMap = [
        'breadthfirstsearch-mazerunner-findclosestexit-test': [
                'com.kenzie.breadthfirstsearch.mazerunner.FindClosestExitTest'
        ],
        'breadthfirstsearch-mazerunner-findshortestpath-test': [
                'com.kenzie.breadthfirstsearch.mazerunner.FindShortestPathToExitTest'
        ]
]

wflowToTestsMap.forEach { wflowName, testList ->
    tasks.register(wflowName) {
        dependsOn wflowtest
        test.doFirst {
            filter {
                testList.each { includeTestsMatching it }
            }
        }
    }
}

def wflowToMainClassMap = [
        'breadthfirstsearch-mazerunner-app': 'com.kenzie.breadthfirstsearch.mazerunner.MazeRunner'
]
wflowToMainClassMap.forEach { wflowName, mainClass ->
    tasks.register(wflowName) {
        runMain.mainClass.set(mainClass)
        dependsOn runMain
    }
}
